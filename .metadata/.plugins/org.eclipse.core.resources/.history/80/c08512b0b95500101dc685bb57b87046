package day06;

	// Shared resource: TicketBookingSystem
	class TicketBookingSystem {
	    private int availableSeats = 5; // Total available seats

	    // Synchronized method to prevent race condition
	    public synchronized void bookTicket(String userName, int seatsRequested) {
	        System.out.println(userName + " is trying to book " + seatsRequested + " seat(s).");

	        try {
	            Thread.sleep(1000); // Simulate delay in booking
	        } catch (InterruptedException e) {
	            System.out.println("Booking interrupted.");
	        }

	        if (seatsRequested <= availableSeats) {
	            availableSeats -= seatsRequested;
	            System.out.println("✅ " + userName + " successfully booked " + seatsRequested + " seat(s).");
	        } else {
	            System.out.println("❌ Sorry " + userName + ", not enough seats available.");
	        }

	        System.out.println("🎫 Seats remaining: " + availableSeats + "\n");
	    }
	}

	// Thread class representing a user
	class User extends Thread {
	    private TicketBookingSystem bookingSystem;
	    private String userName;
	    private int seatsToBook;

	    public User(TicketBookingSystem system, String name, int seats) {
	        this.bookingSystem = system;
	        this.userName = name;
	        this.seatsToBook = seats;
	    }

	    public void run() {
	        bookingSystem.bookTicket(userName, seatsToBook);
	    }
	}

	// Main class to run the simulation
	public class TicketBookingSimulation {
	    public static void main(String[] args) {
	        TicketBookingSystem bookingSystem = new TicketBookingSystem();

	        // Create multiple user threads trying to book tickets
	        User u1 = new User(bookingSystem, "Alice", 2);
	        User u2 = new User(bookingSystem, "Bob", 1);
	        User u3 = new User(bookingSystem, "Charlie", 2);
	        User u4 = new User(bookingSystem, "Diana", 2); // Might fail due to lack of seats

	        // Start all user threads
	        u1.start();
	        u2.start();
	        u3.start();
	        u4.start();
	    }
	}

	
}
